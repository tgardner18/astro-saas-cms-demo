---
import type {
CardFragment,
DisplaySettingsFragment,
} from '../../../../__generated/sdk';

import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import { getDictionaryFromDisplaySettings } from '../../../graphql/shared/displaySettingsHelpers';
import { getAssetWidthClass, getContentWidthClass } from './CardHelper';
import { getAssetVerticalAlignClass, getContentVerticalAlignClass } from './CardStyling';
import { getGlobalStyles } from '../../shared/globalStylesHelper';
import Asset from './Asset.astro';
import Content from './Content.astro';
import Wrapper from './Wrapper.astro';
import { isEditContext } from '../../shared/utils.ts';

const isCmsEdit = isEditContext(Astro.url);

export interface Props {
    key: string;
    data: CardFragment;
    displaySettings: DisplaySettingsFragment[];
    displayTemplateKey: string;
    contentPayload: ContentPayload;
}
const { key, data, displaySettings, displayTemplateKey, contentPayload } =
    Astro.props as Props;

const dictionary = getDictionaryFromDisplaySettings(displaySettings);
const { DisplayAs } = data;
const assetWidthClass = getAssetWidthClass(dictionary);
const contentWidthClass = getContentWidthClass(dictionary);
const assetVerticalAlignClass = getAssetVerticalAlignClass(displaySettings);
const contentVerticalAlignClass = getContentVerticalAlignClass(displaySettings);
const globalStyles = getGlobalStyles(displaySettings);
---

<span data-epi-block-id={isCmsEdit && key || undefined}>
    <Wrapper DisplayAs={DisplayAs ?? ''} GlobalStyles={globalStyles}>
        <Asset
            data={data}
            displaySettings={displaySettings}
            displayTemplateKey={displayTemplateKey}
            contentPayload={contentPayload}
            DisplayAs={DisplayAs ?? undefined}
            widthClass={assetWidthClass}
            verticalAlignClass={assetVerticalAlignClass}
        />
        <Content
            data={data}
            displaySettings={displaySettings}
            displayTemplateKey={displayTemplateKey}
            contentPayload={contentPayload}
            DisplayAs={DisplayAs ?? undefined}
            widthClass={contentWidthClass}
            verticalAlignClass={contentVerticalAlignClass}
        />
    </Wrapper>
</span>