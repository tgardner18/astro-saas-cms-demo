---
import type {
    DisplaySettingsFragment,
    VideoFragment,
} from '../../../../__generated/sdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import { getDictionaryFromDisplaySettings } from '../../../graphql/shared/displaySettingsHelpers';
import { isEditContext } from '../../shared/utils.ts';

const isCmsEdit = isEditContext(Astro.url);

export interface Props {
    key: string;
    data: VideoFragment;
    displaySettings: DisplaySettingsFragment[];
    contentPayload: ContentPayload;
}
const { key, data, displaySettings } = Astro.props as Props;

const videoUrl = (data.Video as any)?.item?.Url || data.Video?.url?.default || null;
const posterImageUrl = (data.VideoPosterImage as any)?.item?.Url || data.VideoPosterImage?.url?.default || null;

// Get settings from display settings
const settings = getDictionaryFromDisplaySettings(displaySettings);

// Map settings to video attributes
const showControls =
    settings['showControls'] || settings['showControls'] === 'true';
const muted = !settings['showControls'] || settings['muted'] === 'true';
const loop = !settings['showControls'] || settings['loop'] === 'true';
const autoPlay = !settings['showControls'] || settings['autoPlay'] === 'true';

// Map aspect ratio classes
const aspectRatioClasses = {
    ratio_16_9: 'aspect-[16/9]',
    ratio_9_16: 'aspect-[9/16]',
    ratio_4_3: 'aspect-[4/3]',
    ratio_3_4: 'aspect-[3/4]',
    ratio_1_1: 'aspect-square',
    auto: '',
};

// Map rounded corner classes
const roundedCornerClasses = {
    small: 'rounded',
    medium: 'rounded-md',
    large: 'rounded-lg',
    huge: 'rounded-[40px]',
    full: 'rounded-full',
    none: '',
};

// Build CSS classes
const cssClasses = [
    'w-full',
    'object-cover',
    aspectRatioClasses[
        settings['aspectRatio'] as keyof typeof aspectRatioClasses
    ] || '',
    roundedCornerClasses[
        settings['roundedCorners'] as keyof typeof roundedCornerClasses
    ] || '',
].filter(Boolean);
---
{ videoUrl &&
    <video
        data-epi-block-id={isCmsEdit && key || undefined}
        src={videoUrl}
        poster={posterImageUrl}
        class:list={cssClasses}
        controls={showControls}
        muted={muted}
        loop={loop}
        autoplay={autoPlay}
        playsinline></video>
}