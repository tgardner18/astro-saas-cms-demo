---
import type {
    DisplaySettingsFragment,
    TextFragment,
} from '../../../../__generated/sdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import { getDictionaryFromDisplaySettings } from '../../../graphql/shared/displaySettingsHelpers.ts';
import { getHeadingElementStyles } from './TextStyling';
import { isEditContext } from '../../shared/utils.ts';

const isCmsEdit = isEditContext(Astro.url);

export interface Props {
    key: String;
    data: TextFragment;
    contentPayload: ContentPayload;
    displaySettings: DisplaySettingsFragment[];
}
const { key, data, displaySettings } = Astro.props as Props;

const settings: Record<string, string> =
    getDictionaryFromDisplaySettings(displaySettings);
const HeadingStyle = (settings?.headingType == "plain" || settings?.headingType == null) 
    ? "span" : settings.headingType;

---

<HeadingStyle class:list={getHeadingElementStyles(displaySettings)} data-epi-block-id={isCmsEdit && key || undefined}>
    {data.Content}
</HeadingStyle>